# DB-GPT Docker Compose Configuration - 永久解决方案
# 确保每次重启都能正确加载数据库schema
version: '3.8'

services:
  db:
    image: docker.xuanyuan.me/mysql/mysql-server
    environment:
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'aa123456'
    ports:
      - 3307:3306
    volumes:
      - dbgpt-myql-db:/var/lib/mysql
      - ./docker/examples/my.cnf:/etc/my.cnf
      - ./docker/examples/sqls:/docker-entrypoint-initdb.d
      - ./assets/schema/dbgpt.sql:/docker-entrypoint-initdb.d/dbgpt.sql
    restart: unless-stopped
    networks:
      - dbgptnet
      
  webserver:
    image: docker.xuanyuan.me/eosphorosai/dbgpt-openai:latest
    command: dbgpt start webserver --config /app/configs/dbgpt-overdue-analysis.toml
    environment:
      - SILICONFLOW_API_KEY=sk-stwdcstqnkcztrsqsrmosrcpekiacrualyzzvsgfmzjvuurv
      - MYSQL_PASSWORD=Weshare@2025
      - MYSQL_HOST=10.10.19.1
      - MYSQL_PORT=9030
      - MYSQL_DATABASE=orange
      - MYSQL_USER=ai_user1
      # 启用自动数据库迁移
      - DISABLE_ALEMBIC_UPGRADE=false
    volumes:
      - ./configs:/app/configs
      - /data:/data
      - /data/models:/app/models
      - dbgpt-data:/app/pilot/data
      - dbgpt-message:/app/pilot/message
    depends_on:
      - db
    ports:
      - 5670:5670/tcp
    restart: unless-stopped
    networks:
      - dbgptnet
    ipc: host
    
  # 数据源自动注册服务
  datasource-init:
    image: docker.xuanyuan.me/eosphorosai/dbgpt-openai:latest
    command: |
      /bin/bash -c '
      echo "🚀 开始自动注册数据源..."
      sleep 60
      
      echo "⏳ 等待DB-GPT服务启动..."
      while ! curl -s http://webserver:5670/api/health > /dev/null; do
        echo "⏳ 等待DB-GPT服务启动中..."
        sleep 10
      done
      
      echo "✅ DB-GPT服务已启动"
      echo "🔧 使用数据库方案注册数据源..."
      
      python3 -c "
import sqlite3
import json
import os
import time

# 等待数据库文件创建
for i in range(30):
    if os.path.exists(\"/app/pilot/data/default_sqlite.db\"):
        break
    time.sleep(2)

db_path = \"/app/pilot/data/default_sqlite.db\"
if os.path.exists(db_path):
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # 检查表是否存在
        cursor.execute(\"SELECT name FROM sqlite_master WHERE type=\\\"table\\\" AND name=\\\"datasource\\\"\")
        if not cursor.fetchone():
            print(\"数据源表不存在，创建表...\")
            cursor.execute(\"\"\"
                CREATE TABLE IF NOT EXISTS datasource (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    name TEXT UNIQUE NOT NULL,
                    type TEXT NOT NULL,
                    config TEXT,
                    description TEXT,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                )
            \"\"\")
        
        # 插入数据源配置
        datasource_config = {
            \"host\": \"10.10.19.1\",
            \"port\": 9030,
            \"database\": \"orange\",
            \"username\": \"ai_user1\",
            \"password\": \"Weshare@2025\",
            \"charset\": \"utf8mb4\",
            \"autocommit\": True,
            \"sync_schema\": True
        }
        
        cursor.execute(\"\"\"
            INSERT OR REPLACE INTO datasource 
            (name, type, config, description, created_at, updated_at) 
            VALUES (?, ?, ?, ?, datetime(\\\"now\\\"), datetime(\\\"now\\\"))
        \"\"\", (
            \"orange\", 
            \"mysql\", 
            json.dumps(datasource_config),
            \"逾期率分析数据库(Apache Doris)\"
        ))
        conn.commit()
        print(\"✅ 数据源配置已写入数据库\")
        
        # 验证写入
        cursor.execute(\"SELECT * FROM datasource WHERE name=?\", (\"orange\",))
        result = cursor.fetchone()
        if result:
            print(f\"✅ 验证成功: {result[1]} - {result[4]}\")
        else:
            print(\"❌ 验证失败：未找到数据源记录\")
            
    except Exception as e:
        print(f\"❌ 数据库操作失败: {e}\")
    finally:
        conn.close()
else:
    print(\"❌ 数据库文件不存在: /app/pilot/data/default_sqlite.db\")
"
      
      echo "🎉 数据源自动注册完成"
      tail -f /dev/null
      '
    volumes:
      - dbgpt-data:/app/pilot/data
      - dbgpt-message:/app/pilot/message
    depends_on:
      - webserver
    networks:
      - dbgptnet
    restart: "no"

volumes:
  dbgpt-myql-db:
  dbgpt-data:
  dbgpt-message:
  dbgpt-alembic-versions:

networks:
  dbgptnet:
    driver: bridge
    name: dbgptnet 