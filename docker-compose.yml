# To run current docker compose file, you should prepare the silliconflow api key in your environment.
# SILICONFLOW_API_KEY=${SILICONFLOW_API_KEY} docker compose up -d
services:
  db:
    image: docker.xuanyuan.me/mysql/mysql-server
    environment:
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'aa123456'
    ports:
      - 3307:3306
    volumes:
      - dbgpt-myql-db:/var/lib/mysql
      - ./docker/examples/my.cnf:/etc/my.cnf
      - ./docker/examples/sqls:/docker-entrypoint-initdb.d
      - ./assets/schema/dbgpt.sql:/docker-entrypoint-initdb.d/dbgpt.sql
    restart: unless-stopped
    networks:
      - dbgptnet
  webserver:
    image: docker.xuanyuan.me/eosphorosai/dbgpt-openai:latest
    command: dbgpt start webserver --config /app/configs/dbgpt-overdue-analysis.toml
    environment:
      - SILICONFLOW_API_KEY=sk-stwdcstqnkcztrsqsrmosrcpekiacrualyzzvsgfmzjvuurv
      - MYSQL_PASSWORD=Weshare@2025
      - MYSQL_HOST=10.10.19.1
      - MYSQL_PORT=9030
      - MYSQL_DATABASE=orange
      - MYSQL_USER=ai_user1
    volumes:
      - ./configs:/app/configs
      - /data:/data
      # May be you can mount your models to container
      - /data/models:/app/models
      - dbgpt-data:/app/pilot/data
      - dbgpt-message:/app/pilot/message
    depends_on:
      - db
    ports:
      - 5670:5670/tcp
    # webserver may be failed, it must wait all sqls in /docker-entrypoint-initdb.d execute finish.
    restart: unless-stopped
    networks:
      - dbgptnet
    ipc: host
volumes:
  dbgpt-myql-db:
  dbgpt-data:
  dbgpt-message:
  dbgpt-alembic-versions:
networks:
  dbgptnet:
    driver: bridge
    name: dbgptnet